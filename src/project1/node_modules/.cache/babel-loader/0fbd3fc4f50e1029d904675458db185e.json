{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport Route from '../router/index';\nimport axios from 'axios';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    Userinfo: {\n      User_Id: null,\n      User_Name: null,\n      User_auth: [],\n      User_token: null\n    },\n    boardlist: [],\n    board: {\n      bTitle: ' ',\n      bContent: ' ',\n      bBrdhit: '',\n      bDatetime: '',\n      bWriter: '',\n      files: []\n    },\n    UserList: [],\n    article: {\n      bId: '',\n      bTitle: '',\n      bContent: '',\n      bBrdhit: '',\n      bDatetime: '',\n      bWriter: '',\n      files: []\n    },\n    SurveyList: [],\n    Survey: {\n      sTitle: '',\n      sDescription: '',\n      questions: []\n    },\n    SurveyDetail: {\n      sId: '',\n      sTitle: '',\n      sDescription: '',\n      sWriter: '',\n      sDatetime: '',\n      questions: []\n    },\n    Answers: {\n      sId: '',\n      questions: []\n    },\n    Response: {\n      sId: '',\n      questions: []\n    }\n  },\n  mutations: {\n    NewUsers: function NewUsers(state, payload) {\n      state.UserList.push(payload);\n      Route.push(\"/login\");\n    },\n    SET_USER: function SET_USER(state, data) {\n      state.Userinfo.User_Id = data.username;\n      state.Userinfo.User_Name = data.name;\n      state.Userinfo.User_auth = data.authorities;\n      state.Userinfo.User_token = data.token;\n      Route.push(\"/user\");\n    },\n    READ_USER_LIST: function READ_USER_LIST(state, data) {\n      state.UserList = data;\n    },\n    WRITE: function WRITE(state, data) {\n      state.Userinfo = data;\n    },\n    READ_BOARD_LIST: function READ_BOARD_LIST(state, data) {\n      state.boardlist = data;\n    },\n    READ_ARTICLE: function READ_ARTICLE(state, data) {\n      state.article = data;\n    },\n    INSERT_TOKEN: function INSERT_TOKEN(state) {\n      state.Userinfo.User_token = localStorage.getItem(\"token\");\n    },\n    SET_USER_REFRESH: function SET_USER_REFRESH(state, data) {\n      state.Userinfo.User_Id = data.username;\n      state.Userinfo.User_Name = data.name;\n      state.Userinfo.User_auth = data.authorities;\n      state.Userinfo.User_token = data.token;\n    },\n    logout: function logout(state) {\n      state.Userinfo.User_Id = null;\n      state.Userinfo.User_Name = null;\n      state.Userinfo.User_auth = null;\n      state.Userinfo.User_token = null;\n      localStorage.removeItem(\"token\");\n      console.log(state.Userinfo);\n      console.log(\"Logout\" + localStorage.getItem(\"token\"));\n    },\n    GET_SURVEYLIST: function GET_SURVEYLIST(state, data) {\n      state.SurveyList = data;\n    },\n    updateAnswer: function updateAnswer(state, data) {\n      state.Survey.questions[data.qindex].answers[data.index].answer = data.value;\n    },\n    updateQuestion: function updateQuestion(state, data) {\n      state.Survey.questions[data.index].q = data.value;\n    },\n    updatesTitle: function updatesTitle(state, data) {\n      state.Survey.sTitle = data;\n    },\n    updatesDescription: function updatesDescription(state, data) {\n      state.Survey.sDescription = data;\n    },\n    updateOptions: function updateOptions(state, data) {\n      state.Survey.questions[data.index].answers = data.value;\n    },\n    GET_SURVEYDETAIL: function GET_SURVEYDETAIL(state, data) {\n      state.SurveyDetail = data;\n    },\n    update_sId: function update_sId(state, data) {\n      state.Answers.sId = data;\n    },\n    update_SingleAnswer: function update_SingleAnswer(state, data) {\n      state.Answers.questions[data.index].answers[0] = data.value;\n    },\n    update_MultipleAnswer: function update_MultipleAnswer(state, data) {\n      state.Answers.questions[data.index].answers = data.value;\n    },\n    GET_SURVEYRESULTS: function GET_SURVEYRESULTS(state, data) {\n      state.Response.sId = data.sId;\n      state.Response.questions = data.questions;\n    }\n  },\n  actions: {\n    loginProcess: function loginProcess(_ref, payload) {\n      var commit = _ref.commit;\n      console.log(payload);\n      return new Promise(function (resolve, reject) {\n        axios.post('http://localhost:9000/api/auth/signin', payload).then(function (Response) {\n          console.log(Response.data);\n\n          if (Response.data.username != null) {\n            axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(Response.data.token);\n            localStorage.setItem(\"token\", Response.data.token);\n            commit('SET_USER', Response.data);\n          }\n        }).catch(function (Error) {\n          console.log('error');\n          reject(Error);\n        });\n      });\n    },\n    SignUp: function SignUp(_ref2, payload) {\n      var commit = _ref2.commit;\n      console.log(payload);\n      return new Promise(function (resolve, reject) {\n        axios.post('http://localhost:9000/api/auth/signup', payload).then(function (Response) {\n          console.log(Response.data);\n\n          if (Response.data === \"success\") {\n            Route.push(\"/login\");\n          }\n        }).catch(function (Error) {\n          console.log('error');\n          reject(Error);\n          alert(\"아이디가 중복\");\n          Route.push(\"/signup\");\n        });\n      });\n    },\n    admin: function admin(_ref3) {\n      var commit = _ref3.commit,\n          state = _ref3.state;\n      return new Promise(function (resolve, reject) {\n        axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(state.Userinfo.User_token);\n        axios.get('http://localhost:9000/api/admin/adminPage').then(function (Response) {\n          console.log(Response.data);\n          commit('READ_USER_LIST', Response.data);\n        }).catch(function (Error) {\n          // console.log(Error)\n          console.log('admin_errorn');\n          Route.push(\"/\");\n        });\n      });\n    },\n    getBoardList: function getBoardList(_ref4, payload) {\n      var commit = _ref4.commit;\n      return new Promise(function (resolve, reject) {\n        axios.get('http://localhost:9000/api/board', payload).then(function (Response) {\n          console.log(Response.data);\n          commit('READ_BOARD_LIST', Response.data);\n        }).catch(function (Error) {\n          console.log('error');\n          reject(Error);\n        });\n      });\n    },\n    getArticle: function getArticle(_ref5, payload) {\n      var commit = _ref5.commit;\n      console.log(payload);\n      return new Promise(function (resolve, reject) {\n        axios.get('http://localhost:9000/api/article', {\n          params: {\n            bId: payload\n          }\n        }).then(function (Response) {\n          console.log(Response.data);\n          commit('READ_ARTICLE', Response.data);\n          Route.push('/article');\n        }).catch(function (Error) {\n          console.log('error');\n          reject(Error);\n        });\n      });\n    },\n    writeaction: function writeaction(_ref6, file) {\n      var commit = _ref6.commit;\n      console.log(file);\n\n      if (!file) {\n        return;\n      }\n\n      var formData = new FormData();\n      file.forEach(function (files) {\n        return formData.append(\"files\", file);\n      });\n      var reader = new FileReader();\n      return new Promise(function (resolve, reject) {\n        axios.post('http://localhost:9000/api/writeaction', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      });\n      /*let formData= new FormData()\r\n      formData.append('bTitle', payload.bTitle)\r\n      formData.append('bContent', payload.bContent)\r\n      console.log(payload.image.length)\r\n      if (payload.image.length > -1) {\r\n        for (let i = 0 ; i < payload.image.length; i++) {\r\n          const imageForm = payload.image[i]\r\n            formData.append(`files[${i}]`, imageForm);\r\n        }\r\n        }\r\n      console.log(formData)\r\n      return new Promise((resolve, reject) => {\r\n          axios({\r\n            url: \"http://localhost:9000/api/writeaction\",\r\n            method: \"post\",\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data;boundary=$boundary' \r\n            },\r\n            data: formData,\r\n          }).then(Response => {\r\n            console.log(Response.data)\r\n            alert('게시글이 등록되었습니다.')\r\n           .then(() => Route.push({name : 'board'}))\r\n          })\r\n          .catch(Error => {\r\n            console.log('error')\r\n            reject(Error)\r\n            alert('게시글 등록 실패')\r\n          })\r\n      })*/\n    },\n    getSurveyList: function getSurveyList(_ref7, payload) {\n      var commit = _ref7.commit;\n      return new Promise(function (resolve, reject) {\n        axios.get('http://localhost:9000/api/surveylist', payload).then(function (Response) {\n          commit('GET_SURVEYLIST', Response.data);\n        }).catch(function (Error) {\n          console.log('getSurveyList_error');\n        });\n      });\n    },\n    CreateSurvey: function CreateSurvey(_ref8) {\n      var state = _ref8.state,\n          commit = _ref8.commit;\n      return new Promise(function (resolve, reject) {\n        console.log(state.Survey);\n        axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(localStorage.getItem(\"token\"));\n        axios.post('http://localhost:9000/api/survey', state.Survey).then(function (Response) {\n          commit('GET_SURVEYLIST', Response.data);\n          Route.push(\"/surveylist\");\n        }).catch(function (Error) {\n          reject(Error);\n          console.log('CreateSurvey_error');\n        });\n      });\n    },\n    getSurveyDetail: function getSurveyDetail(_ref9, payload) {\n      var commit = _ref9.commit;\n      return new Promise(function (resolve, reject) {\n        axios.get('http://localhost:9000/api/survey', {\n          params: {\n            sId: payload\n          }\n        }).then(function (Response) {\n          commit('GET_SURVEYDETAIL', Response.data);\n          Route.push('/surveydetail');\n        }).catch(function (Error) {\n          console.log('getSurveyDetail_error');\n        });\n      });\n    },\n    SubmitAnswers: function SubmitAnswers(_ref10) {\n      var commit = _ref10.commit,\n          state = _ref10.state;\n      return new Promise(function (resolve, reject) {\n        axios.post('http://localhost:9000/api/survey-answers', state.Answers).then(function (Response) {\n          alert(\"응답 완료\");\n          Route.push('/surveylist');\n        }).catch(function (Error) {\n          console.log('SubmitAnswers_error');\n        });\n      });\n    },\n    getResults: function getResults(_ref11, payload) {\n      var commit = _ref11.commit,\n          state = _ref11.state;\n      return new Promise(function (resolve, reject) {\n        axios.get('http://localhost:9000/api/survey-answers', {\n          params: {\n            sId: payload\n          }\n        }).then(function (Response) {\n          console.log(Response.data);\n          commit('GET_SURVEYRESULTS', Response.data);\n          console.log(state.Response);\n          Route.push('/response');\n        }).catch(function (Error) {\n          console.log('getResults_error');\n        });\n      });\n    },\n    deleteSurvey: function deleteSurvey(_ref12, payload) {\n      var commit = _ref12.commit;\n      return new Promise(function (resolve, reject) {\n        axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(localStorage.getItem(\"token\"));\n        axios.delete('http://localhost:9000/api/survey', {\n          params: {\n            sId: payload\n          }\n        }).then(function (Response) {\n          commit('GET_SURVEYLIST', Response.data);\n          Route.push('/surveylist');\n        }).catch(function (Error) {\n          alert('권한 없음');\n          console.log('deleteSurvey_error');\n        });\n      });\n    },\n    UnpackToken: function UnpackToken(_ref13) {\n      var commit = _ref13.commit;\n      return new Promise(function (resolve, reject) {\n        axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(localStorage.getItem(\"token\"));\n        axios.get('http://localhost:9000/api/auth/unpackToken').then(function (Response) {\n          console.log(Response.data);\n          commit('SET_USER_REFRESH', Response.data);\n        }).catch(function (Error) {\n          console.log(Error);\n          console.log('unpackToken_error');\n        });\n      });\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/l6-morning/Documents/work12/project1/src/project1/src/store/index.js"],"names":["Vue","Vuex","Route","axios","use","Store","state","Userinfo","User_Id","User_Name","User_auth","User_token","boardlist","board","bTitle","bContent","bBrdhit","bDatetime","bWriter","files","UserList","article","bId","SurveyList","Survey","sTitle","sDescription","questions","SurveyDetail","sId","sWriter","sDatetime","Answers","Response","mutations","NewUsers","payload","push","SET_USER","data","username","name","authorities","token","READ_USER_LIST","WRITE","READ_BOARD_LIST","READ_ARTICLE","INSERT_TOKEN","localStorage","getItem","SET_USER_REFRESH","logout","removeItem","console","log","GET_SURVEYLIST","updateAnswer","qindex","answers","index","answer","value","updateQuestion","q","updatesTitle","updatesDescription","updateOptions","GET_SURVEYDETAIL","update_sId","update_SingleAnswer","update_MultipleAnswer","GET_SURVEYRESULTS","actions","loginProcess","commit","Promise","resolve","reject","post","then","defaults","headers","common","setItem","catch","Error","SignUp","alert","admin","get","getBoardList","getArticle","params","writeaction","file","formData","FormData","forEach","append","reader","FileReader","getSurveyList","CreateSurvey","getSurveyDetail","SubmitAnswers","getResults","deleteSurvey","delete","UnpackToken"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport Route from '../router/index'\r\nimport axios from 'axios'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    Userinfo:{User_Id:null,User_Name:null,User_auth:[],User_token:null},\r\n    boardlist:[],\r\n    board:{bTitle:' ', bContent:' ', bBrdhit:'', bDatetime:'',bWriter:'',files:[]},\r\n    UserList:[],\r\n    article:{bId:'',bTitle:'', bContent:'', bBrdhit:'', bDatetime:'',bWriter:'',files:[]},\r\n    SurveyList:[],\r\n    Survey: { sTitle: '', sDescription:'', questions: []},\r\n    SurveyDetail: { sId:'', sTitle:'', sDescription:'',sWriter:'', sDatetime:'', questions:[]},\r\n    Answers: {sId:'', questions:[]},\r\n    Response: {sId:'', questions:[]}\r\n  },\r\n  mutations: {\r\n    NewUsers: (state,payload) => {\r\n      state.UserList.push(payload)\r\n      Route.push(\"/login\")\r\n    },\r\n    SET_USER(state, data) {\r\n      state.Userinfo.User_Id = data.username\r\n      state.Userinfo.User_Name = data.name\r\n      state.Userinfo.User_auth = data.authorities\r\n      state.Userinfo.User_token = data.token\r\n      Route.push(\"/user\")\r\n  },\r\n    READ_USER_LIST(state,data) {\r\n      state.UserList = data\r\n    },\r\n    WRITE(state,data) {\r\n      state.Userinfo = data\r\n    },\r\n    READ_BOARD_LIST(state,data) {\r\n      state.boardlist = data\r\n    },\r\n    READ_ARTICLE(state,data) {\r\n      state.article = data\r\n    },\r\n  INSERT_TOKEN(state) {\r\n    state.Userinfo.User_token = localStorage.getItem(\"token\")\r\n  },\r\n  SET_USER_REFRESH(state,data) {\r\n   state.Userinfo.User_Id = data.username\r\n   state.Userinfo.User_Name = data.name\r\n   state.Userinfo.User_auth = data.authorities\r\n   state.Userinfo.User_token = data.token\r\n  },\r\n  logout(state) {\r\n   state.Userinfo.User_Id = null\r\n   state.Userinfo.User_Name = null\r\n   state.Userinfo.User_auth = null\r\n   state.Userinfo.User_token = null\r\n   localStorage.removeItem(\"token\")\r\n   console.log(state.Userinfo)\r\n   console.log(\"Logout\"+localStorage.getItem(\"token\"))\r\n  },\r\n  GET_SURVEYLIST(state, data) {\r\n    state.SurveyList = data\r\n  },\r\n  updateAnswer(state, data) {\r\n    state.Survey.questions[data.qindex].answers[data.index].answer = data.value\r\n  },\r\n  updateQuestion(state, data) {\r\n    state.Survey.questions[data.index].q = data.value\r\n  },\r\n  updatesTitle(state, data) {\r\n    state.Survey.sTitle = data\r\n  },\r\n  updatesDescription(state, data) {\r\n    state.Survey.sDescription = data\r\n  },\r\n  updateOptions(state, data) {\r\n    state.Survey.questions[data.index].answers = data.value\r\n  },\r\n  GET_SURVEYDETAIL(state, data) {\r\n    state.SurveyDetail = data\r\n  },\r\n  update_sId(state, data) {\r\n    state.Answers.sId = data\r\n  },\r\n  update_SingleAnswer(state, data) {\r\n    state.Answers.questions[data.index].answers[0] = data.value\r\n  },\r\n  update_MultipleAnswer(state, data) {\r\n    state.Answers.questions[data.index].answers = data.value\r\n  },\r\n  GET_SURVEYRESULTS(state, data) {\r\n    state.Response.sId = data.sId\r\n    state.Response.questions = data.questions\r\n  }\r\n },\r\n  actions: {\r\n    loginProcess({ commit }, payload) {\r\n      console.log(payload)\r\n      return new Promise((resolve, reject) => {\r\n          axios.post('http://localhost:9000/api/auth/signin', payload)\r\n              .then(Response => {\r\n                  console.log(Response.data)\r\n                  if (Response.data.username != null) {\r\n                      axios.defaults.headers.common['Authorization'] = `Bearer ${Response.data.token}`\r\n                      localStorage.setItem(\"token\",Response.data.token)\r\n                      commit('SET_USER', Response.data)   \r\n                  }\r\n              })\r\n              .catch(Error => {\r\n                  console.log('error')\r\n                  reject(Error)\r\n              })\r\n      })\r\n   },\r\n   SignUp({commit},payload) {\r\n    console.log(payload)\r\n    return new Promise((resolve, reject) => {\r\n        axios.post('http://localhost:9000/api/auth/signup', payload)\r\n            .then(Response => {\r\n                console.log(Response.data)\r\n                if(Response.data === \"success\") {\r\n                  Route.push(\"/login\")\r\n                }\r\n            })\r\n            .catch(Error => {\r\n                console.log('error')\r\n                reject(Error)\r\n                alert(\"아이디가 중복\")\r\n                Route.push(\"/signup\")\r\n            })\r\n    })\r\n   },\r\n   admin({commit,state}) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.Userinfo.User_token}`\r\n      axios.get('http://localhost:9000/api/admin/adminPage')\r\n          .then(Response => {\r\n            console.log(Response.data)\r\n             commit('READ_USER_LIST',Response.data)\r\n          })\r\n          .catch(Error => {\r\n            // console.log(Error)\r\n              console.log('admin_errorn')\r\n              Route.push(\"/\")\r\n          })\r\n  })\r\n  },\r\n  getBoardList({commit},payload) {\r\n    return new Promise((resolve,reject) => {\r\n      axios.get('http://localhost:9000/api/board', payload)\r\n        .then(Response => {\r\n          console.log(Response.data)\r\n            commit('READ_BOARD_LIST',Response.data)\r\n        })\r\n        .catch(Error => {\r\n          console.log('error')\r\n          reject(Error)\r\n        })\r\n    })\r\n  },\r\n  getArticle({commit},payload) {\r\n    console.log(payload)\r\n    return new Promise((resolve,reject) => {\r\n      axios.get('http://localhost:9000/api/article', {params: { bId: payload }})\r\n        .then(Response => {\r\n          console.log(Response.data)\r\n            commit('READ_ARTICLE',Response.data)\r\n            Route.push('/article')\r\n        })\r\n        .catch(Error => {\r\n          console.log('error')\r\n          reject(Error)\r\n        })\r\n    })\r\n  },\r\n  writeaction({commit},file) {\r\n    console.log(file)\r\n    if (!file){\r\n      return\r\n    }\r\n    const formData = new FormData()\r\n    file.forEach((files) => formData.append(\"files\", file))\r\n    const reader = new FileReader();\r\n    return new Promise((resolve,reject) => {\r\n      axios.post('http://localhost:9000/api/writeaction',formData, {\r\n        headers: {\r\n          'Content-Type':'multipart/form-data'\r\n        }\r\n      })\r\n    })\r\n\r\n    /*let formData= new FormData()\r\n    formData.append('bTitle', payload.bTitle)\r\n    formData.append('bContent', payload.bContent)\r\n    console.log(payload.image.length)\r\n    if (payload.image.length > -1) {\r\n      for (let i = 0 ; i < payload.image.length; i++) {\r\n        const imageForm = payload.image[i]\r\n\r\n        formData.append(`files[${i}]`, imageForm);\r\n      }\r\n      }\r\n    console.log(formData)\r\n    return new Promise((resolve, reject) => {\r\n        axios({\r\n          url: \"http://localhost:9000/api/writeaction\",\r\n          method: \"post\",\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data;boundary=$boundary' \r\n          },\r\n          data: formData,\r\n        }).then(Response => {\r\n          console.log(Response.data)\r\n          alert('게시글이 등록되었습니다.')\r\n         .then(() => Route.push({name : 'board'}))\r\n        })\r\n        .catch(Error => {\r\n          console.log('error')\r\n          reject(Error)\r\n          alert('게시글 등록 실패')\r\n        })\r\n    })*/\r\n  },\r\n  getSurveyList({ commit },payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.get('http://localhost:9000/api/surveylist',payload)\r\n        .then(Response => {\r\n          commit('GET_SURVEYLIST', Response.data)\r\n        })\r\n        .catch(Error => {\r\n          console.log('getSurveyList_error')\r\n        })\r\n    })\r\n  },\r\n  CreateSurvey({ state, commit }) {\r\n    return new Promise((resolve, reject) => {\r\n      console.log(state.Survey)\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem(\"token\")}`\r\n      axios.post('http://localhost:9000/api/survey', state.Survey)\r\n        .then(Response => {\r\n          commit('GET_SURVEYLIST', Response.data)\r\n          Route.push(\"/surveylist\")\r\n        })\r\n        .catch(Error => {\r\n          reject(Error)\r\n          console.log('CreateSurvey_error')\r\n        })\r\n    })\r\n  },\r\n  getSurveyDetail({ commit }, payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.get('http://localhost:9000/api/survey', { params: { sId: payload } })\r\n        .then(Response => {\r\n          commit('GET_SURVEYDETAIL', Response.data)\r\n          Route.push('/surveydetail')\r\n        })\r\n        .catch(Error => {\r\n          console.log('getSurveyDetail_error')\r\n        })\r\n    })\r\n  },\r\n  SubmitAnswers({ commit, state }) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.post('http://localhost:9000/api/survey-answers', state.Answers)\r\n        .then(Response => {\r\n          alert(\"응답 완료\")\r\n          Route.push('/surveylist')\r\n        })\r\n        .catch(Error => {\r\n          console.log('SubmitAnswers_error')\r\n        })\r\n    })\r\n  },\r\n  getResults({ commit, state }, payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.get('http://localhost:9000/api/survey-answers', { params: { sId: payload } })\r\n        .then(Response => {\r\n          console.log(Response.data)\r\n          commit('GET_SURVEYRESULTS', Response.data)\r\n          console.log(state.Response)\r\n          Route.push('/response')\r\n        })\r\n        .catch(Error => {\r\n          console.log('getResults_error')\r\n        })\r\n    })\r\n  },\r\n  deleteSurvey({ commit }, payload) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem(\"token\")}`\r\n      axios.delete('http://localhost:9000/api/survey', { params: { sId: payload } })\r\n        .then(Response => {\r\n          commit('GET_SURVEYLIST', Response.data)\r\n          Route.push('/surveylist')\r\n        })\r\n        .catch(Error => {\r\n          alert('권한 없음')\r\n          console.log('deleteSurvey_error')\r\n        })\r\n    })\r\n\r\n  },\r\n   UnpackToken({commit}) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem(\"token\")}`\r\n      axios.get('http://localhost:9000/api/auth/unpackToken')\r\n          .then(Response => {\r\n            console.log(Response.data)\r\n            commit('SET_USER_REFRESH',Response.data)\r\n          })\r\n          .catch(Error => {\r\n            console.log(Error)\r\n              console.log('unpackToken_error')\r\n          })\r\n  })\r\n  }\r\n}})"]},"metadata":{},"sourceType":"module"}