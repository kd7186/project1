{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport Route from '../router/index';\nimport axios from 'axios';\nimport router from '../router/index';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    Userinfo: {\n      User_Id: null,\n      User_Name: null,\n      User_auth: [],\n      User_token: null\n    },\n    boardlist: [],\n    board: [{\n      bTitle: ' ',\n      bContent: ' '\n    }],\n    UserList: [],\n    article: [],\n    surveylist: []\n  },\n  mutations: {\n    NewUsers: function NewUsers(state, payload) {\n      state.UserList.push(payload);\n      Route.push(\"/login\");\n    },\n    SET_USER: function SET_USER(state, data) {\n      state.Userinfo.User_Id = data.username;\n      state.Userinfo.User_Name = data.name;\n      state.Userinfo.User_auth = data.authorities;\n      state.Userinfo.User_token = data.token;\n      Route.push(\"/user\");\n    },\n    READ_USER_LIST: function READ_USER_LIST(state, data) {\n      state.UserList = data;\n    },\n    WRITE: function WRITE(state, data) {\n      state.Userinfo = data;\n    },\n    READ_BOARD_LIST: function READ_BOARD_LIST(state, data) {\n      state.boardlist = data;\n    },\n    READ_ARTICLE: function READ_ARTICLE(state, data) {\n      state.article.bId = data.bId;\n      state.article = data;\n      console.log(state.article);\n    },\n    READ_SURVEY_LIST: function READ_SURVEY_LIST(state, data) {\n      state.surveylist = data;\n    },\n    INSERT_TOKEN: function INSERT_TOKEN(state) {\n      state.Userinfo.User_token = localStorage.getItem(\"token\");\n    },\n    SET_USER_REFRESH: function SET_USER_REFRESH(state, data) {\n      state.Userinfo.User_Id = data.username;\n      state.Userinfo.User_Name = data.name;\n      state.Userinfo.User_auth = data.authorities;\n      state.Userinfo.User_token = data.token;\n    },\n    logout: function logout(state) {\n      state.Userinfo.User_Id = null;\n      state.Userinfo.User_Name = null;\n      state.Userinfo.User_auth = null;\n      state.Userinfo.User_token = null;\n      localStorage.removeItem(\"token\");\n      console.log(state.Userinfo);\n      console.log(\"Logout\" + localStorage.getItem(\"token\"));\n    }\n  },\n  actions: {\n    loginProcess: function loginProcess(_ref, payload) {\n      var commit = _ref.commit;\n      console.log(payload);\n      return new Promise(function (resolve, reject) {\n        axios.post('http://localhost:9000/api/auth/signin', payload).then(function (Response) {\n          console.log(Response.data);\n\n          if (Response.data.username != null) {\n            axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(Response.data.token);\n            localStorage.setItem(\"token\", Response.data.token);\n            commit('SET_USER', Response.data);\n          }\n        }).catch(function (Error) {\n          console.log('error');\n          reject(Error);\n        });\n      });\n    },\n    SignUp: function SignUp(_ref2, payload) {\n      var commit = _ref2.commit;\n      console.log(payload);\n      return new Promise(function (resolve, reject) {\n        axios.post('http://localhost:9000/api/auth/signup', payload).then(function (Response) {\n          console.log(Response.data);\n\n          if (Response.data === \"success\") {\n            Route.push(\"/login\");\n          }\n        }).catch(function (Error) {\n          console.log('error');\n          reject(Error);\n          alert(\"아이디가 중복\");\n          Route.push(\"/signup\");\n        });\n      });\n    },\n    admin: function admin(_ref3) {\n      var commit = _ref3.commit,\n          state = _ref3.state;\n      return new Promise(function (resolve, reject) {\n        axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(state.Userinfo.User_token);\n        axios.get('http://localhost:9000/api/admin/adminPage').then(function (Response) {\n          console.log(Response.data);\n          commit('READ_USER_LIST', Response.data);\n        }).catch(function (Error) {\n          // console.log(Error)\n          console.log('admin_error');\n          Route.push(\"/\");\n        });\n      });\n    },\n    board: function board(_ref4, payload) {\n      var commit = _ref4.commit;\n      return new Promise(function (resolve, reject) {\n        axios.get('http://localhost:9000/api/board', payload).then(function (Response) {\n          console.log(Response.data);\n          commit('READ_BOARD_LIST', Response.data);\n        }).catch(function (Error) {\n          console.log('error');\n          reject(Error);\n        });\n      });\n    },\n    article: function article(_ref5, payload) {\n      var commit = _ref5.commit;\n      //var obj= {bId: router.currentRoute.params.bId}\n      //payload = obj\n      console.log(payload);\n      return new Promise(function (resolve, reject) {\n        axios.get('http://localhost:9000/api/article', payload).then(function (Response) {\n          console.log(Response.data);\n          commit('READ_ARTICLE', Response.data);\n        }).catch(function (Error) {\n          console.log('error');\n          reject(Error);\n        });\n      });\n    },\n\n    /*writeaction({commit},payload) {\n      console.log(payload)\n     // let formData= new FormData()\n      //formData.append('bTitle', payload.bTitle)\n      //formData.append('bContent', payload.bContent)\n      //formData.append('file', payload.fileinput)\n      //console.log(formData) \n      return new Promise((resolve, reject) => {\n        axios.post('http://localhost:9000/api/writeaction',\n         payload \n        )\n          .then(Response => {\n            console.log(Response.data)\n            alert('게시글이 등록되었습니다.')\n           .then(() => Route.push({name : 'board'}))\n          })\n          .catch(Error => {\n            console.log('error')\n            reject(Error)\n            alert('게시글 등록 실패')\n          })\n      })\n    },*/\n    writeaction: function writeaction(_ref6, payload) {\n      var commit = _ref6.commit;\n      console.log(payload);\n      var formData = new FormData();\n      formData.append('bTitle', payload.bTitle);\n      formData.append('bContent', payload.bContent); //formData.append('file', payload.fileinput)\n\n      console.log(formData);\n      return new Promise(function (resolve, reject) {\n        axios({\n          url: \"http://localhost:9000/api/writeaction\",\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"multipart/formdata; boundary = \" + new Date().getTime()\n          },\n          data: formData\n        }).then(function (Response) {\n          console.log(Response.data);\n          alert('게시글이 등록되었습니다.').then(function () {\n            return Route.push({\n              name: 'board'\n            });\n          });\n        }).catch(function (Error) {\n          console.log('error');\n          reject(Error);\n          alert('게시글 등록 실패');\n        });\n      });\n    },\n\n    /* axios.post('http://localhost:9000/api/writeaction', formData, {\n              headers: {\n                \"Content-Type\": \"multipart/form-data; boundary = \" + new Date().getTime()\n              }\n          }) */\n    UnpackToken: function UnpackToken(_ref7) {\n      var commit = _ref7.commit;\n      return new Promise(function (resolve, reject) {\n        axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(localStorage.getItem(\"token\"));\n        axios.get('http://localhost:9000/api/auth/unpackToken').then(function (Response) {\n          console.log(Response.data);\n          commit('SET_USER_REFRESH', Response.data);\n        }).catch(function (Error) {\n          console.log(Error);\n          console.log('unpackToken_error');\n        });\n      });\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/l6-morning/Documents/work12/project1/src/project1/src/store/index.js"],"names":["Vue","Vuex","Route","axios","router","use","Store","state","Userinfo","User_Id","User_Name","User_auth","User_token","boardlist","board","bTitle","bContent","UserList","article","surveylist","mutations","NewUsers","payload","push","SET_USER","data","username","name","authorities","token","READ_USER_LIST","WRITE","READ_BOARD_LIST","READ_ARTICLE","bId","console","log","READ_SURVEY_LIST","INSERT_TOKEN","localStorage","getItem","SET_USER_REFRESH","logout","removeItem","actions","loginProcess","commit","Promise","resolve","reject","post","then","Response","defaults","headers","common","setItem","catch","Error","SignUp","alert","admin","get","writeaction","formData","FormData","append","url","method","Date","getTime","UnpackToken"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Route from '../router/index'\nimport axios from 'axios'\nimport router from '../router/index'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    Userinfo:{User_Id:null,User_Name:null,User_auth:[],User_token:null},\n    boardlist:[],\n    board:[{bTitle:' ', bContent:' '}],\n    UserList:[],\n    article:[],\n    surveylist:[]\n  },\n  mutations: {\n    NewUsers: (state,payload) => {\n      state.UserList.push(payload)\n      Route.push(\"/login\")\n    },\n    SET_USER(state, data) {\n      state.Userinfo.User_Id = data.username\n      state.Userinfo.User_Name = data.name\n      state.Userinfo.User_auth = data.authorities\n      state.Userinfo.User_token = data.token\n      Route.push(\"/user\")\n  },\n    READ_USER_LIST(state,data) {\n      state.UserList = data\n    },\n    WRITE(state,data) {\n      state.Userinfo = data\n    },\n    READ_BOARD_LIST(state,data) {\n      state.boardlist = data\n    },\n    READ_ARTICLE(state,data) {\n      state.article.bId = data.bId\n      state.article = data\n      console.log(state.article)\n    },\n    READ_SURVEY_LIST(state,data) {\n      state.surveylist = data\n    },\n  INSERT_TOKEN(state) {\n    state.Userinfo.User_token = localStorage.getItem(\"token\")\n  },\n  SET_USER_REFRESH(state,data) {\n   state.Userinfo.User_Id = data.username\n   state.Userinfo.User_Name = data.name\n   state.Userinfo.User_auth = data.authorities\n   state.Userinfo.User_token = data.token\n  },\n  logout(state) {\n   state.Userinfo.User_Id = null\n   state.Userinfo.User_Name = null\n   state.Userinfo.User_auth = null\n   state.Userinfo.User_token = null\n   localStorage.removeItem(\"token\")\n   console.log(state.Userinfo)\n   console.log(\"Logout\"+localStorage.getItem(\"token\"))\n  }\n },\n  actions: {\n    loginProcess({ commit }, payload) {\n      console.log(payload)\n      return new Promise((resolve, reject) => {\n          axios.post('http://localhost:9000/api/auth/signin', payload)\n              .then(Response => {\n                  console.log(Response.data)\n                  if (Response.data.username != null) {\n                      axios.defaults.headers.common['Authorization'] = `Bearer ${Response.data.token}`\n                      localStorage.setItem(\"token\",Response.data.token)\n                      commit('SET_USER', Response.data)   \n                  }\n              })\n              .catch(Error => {\n                  console.log('error')\n                  reject(Error)\n              })\n      })\n   },\n   SignUp({commit},payload) {\n    console.log(payload)\n    return new Promise((resolve, reject) => {\n        axios.post('http://localhost:9000/api/auth/signup', payload)\n            .then(Response => {\n                console.log(Response.data)\n                if(Response.data === \"success\") {\n                  Route.push(\"/login\")\n                }\n            })\n            .catch(Error => {\n                console.log('error')\n                reject(Error)\n                alert(\"아이디가 중복\")\n                Route.push(\"/signup\")\n            })\n    })\n   },\n   admin({commit,state}) {\n    return new Promise((resolve, reject) => {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.Userinfo.User_token}`\n      axios.get('http://localhost:9000/api/admin/adminPage')\n          .then(Response => {\n            console.log(Response.data)\n             commit('READ_USER_LIST',Response.data)\n          })\n          .catch(Error => {\n            // console.log(Error)\n              console.log('admin_error')\n              Route.push(\"/\")\n          })\n  })\n  },\n  board({commit},payload) {\n    return new Promise((resolve,reject) => {\n      axios.get('http://localhost:9000/api/board', payload)\n        .then(Response => {\n          console.log(Response.data)\n            commit('READ_BOARD_LIST',Response.data)\n        })\n        .catch(Error => {\n          console.log('error')\n          reject(Error)\n        })\n    })\n  },\n  article({commit},payload) {\n    //var obj= {bId: router.currentRoute.params.bId}\n    //payload = obj\n    console.log(payload)\n    return new Promise((resolve,reject) => {\n      axios.get('http://localhost:9000/api/article', payload)\n        .then(Response => {\n          console.log(Response.data)\n            commit('READ_ARTICLE',Response.data)\n        })\n        .catch(Error => {\n          console.log('error')\n          reject(Error)\n        })\n    })\n  },\n  /*writeaction({commit},payload) {\n    console.log(payload)\n   // let formData= new FormData()\n    //formData.append('bTitle', payload.bTitle)\n    //formData.append('bContent', payload.bContent)\n    //formData.append('file', payload.fileinput)\n    //console.log(formData) \n    return new Promise((resolve, reject) => {\n      axios.post('http://localhost:9000/api/writeaction',\n       payload \n      )\n        .then(Response => {\n          console.log(Response.data)\n          alert('게시글이 등록되었습니다.')\n         .then(() => Route.push({name : 'board'}))\n        })\n        .catch(Error => {\n          console.log('error')\n          reject(Error)\n          alert('게시글 등록 실패')\n        })\n    })\n  },*/\n\n  writeaction({commit},payload) {\n    console.log(payload)\n    let formData= new FormData()\n    formData.append('bTitle', payload.bTitle)\n    formData.append('bContent', payload.bContent)\n    //formData.append('file', payload.fileinput)\n    console.log(formData) \n    return new Promise((resolve, reject) => {\n        axios({\n          url: \"http://localhost:9000/api/writeaction\",\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"multipart/formdata; boundary = \" + new Date().getTime()\n          },\n          data: formData,\n        }).then(Response => {\n          console.log(Response.data)\n          alert('게시글이 등록되었습니다.')\n         .then(() => Route.push({name : 'board'}))\n        })\n        .catch(Error => {\n          console.log('error')\n          reject(Error)\n          alert('게시글 등록 실패')\n        })\n    })\n  },\n/* axios.post('http://localhost:9000/api/writeaction', formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data; boundary = \" + new Date().getTime()\n          }\n      }) */\n   UnpackToken({commit}) {\n    return new Promise((resolve, reject) => {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem(\"token\")}`\n      axios.get('http://localhost:9000/api/auth/unpackToken')\n          .then(Response => {\n            console.log(Response.data)\n            commit('SET_USER_REFRESH',Response.data)\n          })\n          .catch(Error => {\n            console.log(Error)\n              console.log('unpackToken_error')\n          })\n  })\n  }\n}})"]},"metadata":{},"sourceType":"module"}